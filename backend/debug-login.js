require('dotenv').config();
const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcryptjs');

const prisma = new PrismaClient();

async function debugLogin() {
  const email = 'safwan76st@gmail.com'; // Changez par l'email que vous testez
  const password = 'Lysft@2236'; // Changez par le mot de passe que vous testez
  
  console.log('üîç Debug de la connexion...\n');
  
  try {
    // 1. Chercher l'utilisateur
    console.log('1Ô∏è‚É£ Recherche utilisateur avec email:', email);
    const user = await prisma.user.findUnique({
      where: { email }
    });
    
    if (!user) {
      console.log('‚ùå Utilisateur non trouv√© !');
      return;
    }
    
    console.log('‚úÖ Utilisateur trouv√©:');
    console.log('- ID:', user.id);
    console.log('- Email:', user.email);
    console.log('- Full Name:', user.fullName);
    console.log('- Email Verified:', user.emailVerified);
    console.log('- Is Active:', user.isActive);
    console.log('- Role:', user.role);
    console.log('- Password Hash:', user.password?.substring(0, 20) + '...');
    console.log('');
    
    // 2. V√©rifier si le compte est actif
    console.log('2Ô∏è‚É£ V√©rification du statut du compte...');
    if (!user.isActive) {
      console.log('‚ùå Compte d√©sactiv√© !');
      return;
    }
    console.log('‚úÖ Compte actif');
    console.log('');
    
    // 3. V√©rifier la v√©rification email (si requis)
    console.log('3Ô∏è‚É£ V√©rification de l\'email...');
    if (!user.emailVerified) {
      console.log('‚ö†Ô∏è  Email non v√©rifi√© - cela peut bloquer la connexion selon votre logique');
    } else {
      console.log('‚úÖ Email v√©rifi√©');
    }
    console.log('');
    
    // 4. Tester le mot de passe
    console.log('4Ô∏è‚É£ V√©rification du mot de passe...');
    if (!user.password) {
      console.log('‚ùå Aucun mot de passe enregistr√© !');
      return;
    }
    
    const isPasswordValid = await bcrypt.compare(password, user.password);
    console.log('- Mot de passe fourni:', password);
    console.log('- Hash en base:', user.password);
    console.log('- Comparaison bcrypt:', isPasswordValid ? '‚úÖ Valide' : '‚ùå Invalide');
    
    if (!isPasswordValid) {
      console.log('‚ùå Mot de passe incorrect !');
      return;
    }
    
    console.log('\nüéâ Toutes les v√©rifications sont OK !');
    console.log('Le probl√®me est probablement dans votre route de login.');
    
  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

debugLogin();



